name: "Deploy"
on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency: 
  group: ${{ github.head_ref ||  github.ref }}

permissions: # https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-azure
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    outputs:
      functionAppName: ${{ steps.output.outputs.functionAppName }}
    env:
        ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./terraform_infrastructure
        run : terraform init -backend-config="backend.tfvars"

      - name: Terraform Plan
        working-directory: ./terraform_infrastructure
        run: terraform plan -input=false -out="tfplan"

      - name: Terraform Apply
        working-directory: ./terraform_infrastructure
        run: terraform apply -auto-approve "tfplan"

      - name: 'Terraform Output'
        id: output
        working-directory: ./terraform_infrastructure
        run: |
          function_app_name=$(terraform output -raw function_app_name)
          echo "functionAppName=${function_app_name}" >> $GITHUB_OUTPUT

  function-deploy:
    runs-on: ubuntu-latest
    needs: [infrastructure]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 'Resolve Project Dependencies Using Pip'
        shell: bash
        run: |
          pushd './azure_function'
          python -m pip install --upgrade pip
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"
          popd

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ needs.infrastructure.outputs.functionAppName }}
          package: './azure_function'
